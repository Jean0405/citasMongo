use("citasDB");
db.createCollection("users", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["ID", "names", "age", "phone", "address", "email", "genre"],
      properties: {
        ID: {
          bsonType: "int",
          description: "ID is required",
        },

        // NAMES
        names: {
          bsonType: "object",
          required: ["name", "surname"],
          properties: {
            name: {
              bsonType: "string",
              maxLength: 70,
              description: "name is required",
            },
            surname: {
              bsonType: "string",
              maxLength: 70,
              description: "surname is required",
            },
          },
          description: "Names is required",
        },
        age: {
          bsonType: "int",
          minimum: 1,
        },

        //PHONE NUMBER
        phone: {
          bsonType: "string",
          pattern: "^[0-9]+$",
          maxLength: 10,
          description:
            "phone number is required and has a maximum of 10 characters.",
        },
        //ADDRESS

        address: {
          bsonType: "string",
          description: "address is required",
        },

        //EMAIL
        email: {
          bsonType: "string",
          description: "email is required",
        },

        //GENRE
        genre: {
          bsonType: "object",
          required: ["nameGenre", "abbreviation"],
          properties: {
            nameGenre: {
              bsonType: "string",
              enum: ["masculino", "femenino"],
              description: "genre's name is required",
            },
            abbreviation: {
              bsonType: "string",
              enum: ["M", "F"],
              description: "genre's abbreviation is required",
            },
          },
          description: "genre is required",
        },

        //ATTENDANT
        attendant: {
          bsonType: "object",
          required: ["ID", "name", "phone", "address"],
          properties: {
            ID: {
              bsonType: "int",
              description: "attendant's ID is required",
            },
            name: {
              bsonType: "string",
              description: "attendant's name is required",
            },
            phone: {
              bsonType: "string",
              pattern: "^[0-9]+$",
              maxLength: 10,
              description: "attendant's phone is required",
            },
            address: {
              bsonType: "string",
              description: "attendant's address is required",
            },
          },
        },
      },
    },
  },
});

use("citasDB");
db.createCollection("doctors", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "ID",
        "name",
        "email",
        "password",
        "role",
        "office",
        "specialty",
      ],
      properties: {
        ID: {
          bsonType: "int",
          description: "ID is required",
        },
        name: {
          bsonType: "string",
          description: "name is required",
        },
        email: {
          bsonType: "string",
          description: "doctor's email is required",
        },
        password: {
          bsonType: "string",
          description: "doctor's password is required",
        },
        role: {
          bsonType: "object",
          required: ["name", "permissions"],
          properties: {
            name: {
              bsonType: "string",
            },
            permissions: {
              bsonType: "array",
            },
          },
          description: "doctor's role is required",
        },
        office: {
          bsonType: "object",
          required: ["ID", "name"],
          properties: {
            ID: {
              bsonType: "int",
              description: "office's ID is required",
            },
            name: {
              bsonType: "string",
              description: "office's name is required",
            },
          },
          description: "office is required",
        },
        specialty: {
          bsonType: "object",
          required: ["ID", "name"],
          properties: {
            ID: {
              bsonType: "int",
              description: "specialty's ID is required",
            },
            name: {
              bsonType: "string",
              description: "specialty's name is required",
            },
          },
          description: "specialty is required",
        },
      },
    },
  },
});

use("citasDB");
db.createCollection("quotes", {
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: ["date", "state", "doctor", "user"],
      properties: {
        ID: {
          bsonType: "int",
        },
        date: {
          bsonType: "date",
          description: "date is required",
        },
        state: {
          bsonType: "string",
          enum: ["activo", "inactivo", "rechazada", "realizada"],
          description: "state is required",
        },
        doctor: {
          bsonType: "object",
          required: ["ID", "name"],
          properties: {
            ID: {
              bsonType: "int",
              description: "doctor's ID is required",
            },
            name: {
              bsonType: "string",
              description: "doctor's name is required",
            },
          },
          description: "doctor is required",
        },
        user: {
          bsonType: "object",
          required: ["ID", "name", "surname", "genre"],
          properties: {
            ID: {
              bsonType: "int",
              description: "user's ID is required",
            },
            name: {
              bsonType: "string",
              description: "user's name is required",
            },
            surname: {
              bsonType: "string",
              description: "user's surname is required",
            },
            genre: {
              bsonType: "string",
              description: "user's genre is required",
            },
          },
        },
      },
    },
  },
});

use("citasDB");
db.quotes.insertMany([
  {
    ID: 2,
    date: new Date("2023-10-10"),
    state: "realizada",
    doctor: {
      ID: 1097094415,
      name: "Jean Angarita",
    },
    user: {
      ID: 1005184201,
      name: "Sara Fernanda",
      surname: "Angarita Olarte",
      genre: "femenino",
    },
  },
  {
    ID: 3,
    date: new Date("2023-11-15"),
    state: "activo",
    doctor: {
      ID: 2087564321,
      name: "Maria López",
    },
    user: {
      ID: 1002567890,
      name: "Juan Pérez",
      surname: "Gómez",
      genre: "masculino",
    },
  },
  {
    ID: 4,
    date: new Date("2023-10-10"),
    state: "rechazada",
    doctor: {
      ID: 1097094415,
      name: "José Enrique",
    },
    user: {
      ID: 1005184201,
      name: "Laura Florez",
      surname: "Duarte Florez",
      genre: "femenino",
    },
  },
  {
    ID: 5,
    date: new Date("2023-09-25"),
    state: "rechazada",
    doctor: {
      ID: 987654321,
      name: "Laura Sánchez",
    },
    user: {
      ID: 1001234567,
      name: "Elena Rodríguez",
      surname: "Pérez",
      genre: "femenino",
    },
  },
  {
    ID: 6,
    date: new Date("2023-11-03"),
    state: "realizada",
    doctor: {
      ID: 567890123,
      name: "Andrés Gómez",
    },
    user: {
      ID: 1009876543,
      name: "Roberto Martínez",
      surname: "López",
      genre: "masculino",
    },
  },
]);

use("citasDB");
db.doctors.insertMany([
  {
    ID: 2,
    name: "Dr. Rodríguez",
    email: "rodriguez@example.com",
    password: "rodriguez123",
    role: { name: "doctor", permissions: ["mid_level", "write"] },
    office: { ID: 2, name: "Consultorio A" },
    specialty: { ID: 2, name: "Cardiología" },
  },
  {
    ID: 3,
    name: "Dra. Sánchez",
    email: "sanchez@example.com",
    password: "sanchez123",
    role: { name: "doctor", permissions: ["read"] },
    office: { ID: 3, name: "Consultorio B" },
    specialty: { ID: 3, name: "Dermatología" },
  },
  {
    ID: 4,
    name: "Dra. Martínez",
    email: "martinez@example.com",
    password: "martinez123",
    role: { name: "doctor", permissions: ["mid_level", "write"] },
    office: { ID: 4, name: "Consultorio C" },
    specialty: { ID: 4, name: "Pediatría" },
  },
  {
    ID: 5,
    name: "Dr. Vargas",
    email: "vargas@example.com",
    password: "vargas123",
    role: { name: "doctor", permissions: ["read"] },
    office: { ID: 5, name: "Consultorio D" },
    specialty: { ID: 5, name: "Neurología" },
  },
]);

use("citasDB");
db.users.insertMany([
  {
    ID: 1005184201,
    names: {
      name: "Juan",
      surname: "Pérez",
    },
    age: 20,
    phone: "1234567890",
    address: "Calle B",
    email: "juan@gmail.com",
    genre: {
      nameGenre: "masculino",
      abbreviation: "M",
    },
    attendant: {
      ID: 1234567890,
      name: "Ana",
      phone: "9876543210",
      address: "Avenida ABC",
    },
  },
  {
    ID: 1005184201,
    names: {
      name: "Sara",
      surname: "Ramirez",
    },
    age: 20,
    phone: "1234567890",
    address: "Calle A",
    email: "ramirez@gmail.com",
    genre: {
      nameGenre: "masculino",
      abbreviation: "M",
    },
    attendant: {
      ID: 1234567811,
      name: "Isabella",
      phone: "9876543111",
      address: "Avenida AAA",
    },
  },
  {
    ID: 1112223334,
    names: {
      name: "Jorge",
      surname: "Bolaños",
    },
    age: 20,
    phone: "1234567111",
    address: "Calle 123",
    email: "ramirez@gmail.com",
    genre: {
      nameGenre: "masculino",
      abbreviation: "M",
    },
    attendant: {
      ID: 1234567222,
      name: "José",
      phone: "9876543333",
      address: "Avenida CCC",
    },
  },
]);
